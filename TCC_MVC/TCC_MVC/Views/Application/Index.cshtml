@model TCC_MVC.Models.SearchModel
@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm("Index", "Application", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <hgroup>
        <ul id="filter">
            <li>
                <span>
                    @Html.LabelFor(m => m.Keyword)
                    <br />
                    @Html.TextBoxFor(m => m.Keyword)
                </span>
            </li>
            <li>
                <b>@Html.DisplayNameFor(m => m.KeyType)</b>
                <br />
                <span>
                    @Html.RadioButtonFor(m => m.KeyType, "author", new { @id = "author" }) 
                    <label for="author">Pesquisador</label>
                </span>
                <span>
                    @Html.RadioButtonFor(m => m.KeyType, "search", new { @id = "search" })
                    <label for="search">Linha</label>  
                </span>
                <span>
                    @Html.RadioButtonFor(m => m.KeyType, "group", new { @id = "group" })
                    <label for="group">Grupo</label>   
                </span>
                <span>
                    @Html.RadioButtonFor(m => m.KeyType, "clique", new { @id = "clique" })
                    <label for="clique">Clique</label>    
                </span>
            </li>
            <li>
                <b>@Html.DisplayNameFor(m => m.OrderByType)</b>
                <br />
                <span>
                    @Html.RadioButtonFor(m => m.OrderByType, "year", new { @id = "year" })
                    <label for="year">Ano</label>    
                    @Html.RadioButtonFor(m => m.OrderByType, "triennium", new { @id = "triennium" })
                    <label for="triennium">Trieno</label>
                    @Html.RadioButtonFor(m => m.OrderByType, "total", new { @id = "total" })
                    <label for="total">Toltal</label>
                    @Html.RadioButtonFor(m => m.OrderByType, "evolution", new { @id = "evolution" })
                    <label for="evolution">Evolução</label>
                </span>
            </li>
            @{var classe = (Model.OrderByType != null && Model.OrderByType.Equals("evolution")) ? string.Empty : "hidden"; }
            <li class="@classe hidden-options" >
                Evolução por:
                <span>
                    @Html.RadioButtonFor(x => x.EvolutionType, "year", new { @id = "yearEvolution" })
                    <label for="yearEvolution">Ano</label> 
                    @Html.RadioButtonFor(x => x.EvolutionType, "triennum", new { @id = "triennumEvolution" })
                    <label for="triennumEvolution">Trieno</label>  
                </span>
            </li>
            
            <li class="@classe hidden-options">
                Intervalo:
                <span>
                    @Html.RadioButtonFor(x => x.EvolutionGap, "3", new { @id = "3" })
                    <label for="3">3</label>
                    @Html.RadioButtonFor(x => x.EvolutionGap, "5", new { @id = "5" })
                    <label for="5">5</label>
                </span>
            </li>
            <li>
                <b>@Html.DisplayNameFor(m => m.GroupByType)</b>
                <br />
                <span>
                    @Html.RadioButtonFor(m => m.GroupByType, "completo", new { @id = "completo" })
                    <label for="completo">Artigo Completo</label>
                    @Html.RadioButtonFor(m => m.GroupByType, "resumo", new { @id = "resumo" })
                    <label for="resumo">Resumo</label>
                    @Html.RadioButtonFor(m => m.GroupByType, "periodico", new { @id = "periodico" })
                    <label for="periodico">Periódico</label>
                </span>
            </li>
            <li>
                <b>Contar por Qualis:</b>
                <br />
                <span>
                    @Html.CheckBoxFor(m => m.Qualis.withCheck, new { id = "with" })
                    <label for="with">Todos que contêm</label>
                    @Html.CheckBoxFor(m => m.Qualis.withoutCheck, new { id = "without" })
                    <label for="without">Todos que não contêm</label>
                    @Html.CheckBoxFor(m => m.Qualis.specificCheck, new { id = "allSpecific" })
                    <label for="allSpecific">Todos detalhadamente</label> 
                    @Html.CheckBoxFor(m => m.Qualis.a1Check, new { id = "a1" })
                    <label for="a1">A1</label>
                    @Html.CheckBoxFor(m => m.Qualis.a2Check, new { id = "a2" })
                    <label for="a2">A2</label>
                    @Html.CheckBoxFor(m => m.Qualis.b1Check, new { id = "b1" })
                    <label for="b1">B1</label>
                    @Html.CheckBoxFor(m => m.Qualis.b2Check, new { id = "b2" })
                    <label or="b2">B2</label>
                    @Html.CheckBoxFor(m => m.Qualis.b3Check, new { id = "b3" })
                    <label for="b3">B3</label>
                    @Html.CheckBoxFor(m => m.Qualis.b4Check, new { id = "b4" })
                    <label for="b4">B4</label>
                    @Html.CheckBoxFor(m => m.Qualis.b5Check, new { id = "b5" })
                    <label for="b5">B5</label>
                    @Html.CheckBoxFor(m => m.Qualis.cCheck, new { id = "c" })
                    <label for="c">C</label>
                </span>
            </li>
        </ul>
        <input type="submit" value="Filtrar" />
        <input type="button" value="Desfazer" id="uncheck" />
    </hgroup>
}

@if (!string.IsNullOrEmpty(Model.OrderByType) && Model.OrderByType.Equals("evolution"))
{
    @Html.Partial("_EvolutionGraphic", Model.EvolutionGrafic, new ViewDataDictionary { {"chartKeyword", @Model.Keyword }, { "","" } });
}

@if(Model.showQualis != null && Model.showQualis == true)
{
    @Html.Partial("_Qualis", Model.Qualis)
}

@if (Model.articles != null && Model.articles.Count > 0)
{
    <br />
    <span>Total: @Model.Total artigo(s)</span>
    <table>
        <tr>
            <td> </td>
            <td>Autor</td>
            <td>Título</td>
            <td>Ação</td>
        </tr>
        @foreach (var article in Model.articles)
        {
            <tr>
                <td><input type="checkbox" name="articles" value="@article.Id" /></td>
                <td>@Html.ActionLink(article.Author, "Edit", "Research", new { idAuthor = article.AuthorId }, null)</td>
                <td>@article.Title</td>
                <td>@Html.ActionLink("Visualizar", "View", "Article", new { idArticle = article.Id, idAuthor = article.AuthorId }, null)</td>
            </tr>
        }
    </table>
}
